#pragma once

// 日立製加湿空気清浄機 EP-ZN30S リモコン型番:EPR-26

class CHitachi_EP_ZN30S {
private:
  u8 pin;
  
  const u8 ID=0xb; // 固定

  void SendPulse(int t,bool f)
  {
    const u32 OnTime=t*425;
    if(!f){
      delayMicroseconds(OnTime);
      }else{
      const u32 EndTime=micros()+OnTime;
      while(micros()<EndTime){
        EspPD_DigitalWrite(pin,true);
        delayMicroseconds(9);
        EspPD_DigitalWrite(pin,false);
        delayMicroseconds(17);
      }
    }
  }

  void SendMultiBits(u8 Data,u8 BitsCount)
  {
    for(int idx=0;idx<BitsCount;idx++){
      SendPulse(1,true);
      const bool f=(Data&0x01)!=0x00;
      SendPulse(f?3:1,false);
      Data>>=1;
    }
  }

  void SendDataAndParity(u8 Data)
  {
    IrDA_Wait();
    noInterrupts();
    
    SendPulse(8,true);
    SendPulse(4,false);

    SendMultiBits(0x01,8);
    SendMultiBits(0x10,8);
    SendMultiBits(0x00,8);
    SendMultiBits(0x48,8);
    SendMultiBits(0xb7,8);
    SendMultiBits(Data,8);
    SendMultiBits(~Data,8);
  
    SendPulse(1,true);
    SendPulse(20,false);
    SendPulse(1,true);
    interrupts();
    IrDA_Wait();
  }

  const u32 datalen = 118;
  
public:
  void Init(const u8 _pin){
    pin=_pin;
  }
  
  void SendRaw(u8 Data){
    SendDataAndParity(Data);
  }
  
  void SendPowerToggle(void){ // 電源On/Off
    //SendDataAndParity(0x01);
    const u16 data[datalen]={3362,1601,428,1191,421,441,432,422,433,418,438,432,424,430,425,419,439,437,423,442,417,434,429,417,426,445,411,1186,420,454,413,428,414,453,425,425,418,443,412,446,412,437,429,433,412,443,426,434,411,455,419,435,422,432,414,435,431,1174,421,436,417,452,415,1181,425,433,416,1192,431,1180,430,1175,435,422,418,1187,432,1183,431,428,414,1197,430,1182,429,434,412,442,425,423,420,444,427,435,406,444,414,455,408,449,406,1186,433,1180,417,1195,424,1183,416,1190,436,1171,435,1180,434,8279,415,0,};
    IrSend(pin, datalen, data);
  }
  void SendMode(void){ // モード
    //SendDataAndParity(0x04);
    const u16 data[datalen]={3402,1560,436,1180,428,429,424,425,431,433,424,418,438,433,423,430,426,446,419,431,412,449,408,435,435,437,418,1177,433,426,428,422,431,446,419,426,436,424,433,418,437,434,424,427,417,439,428,429,428,438,417,442,425,427,430,426,404,1199,422,444,422,436,424,1168,419,462,399,1199,410,1200,416,1190,433,429,414,1189,432,1178,433,426,418,1195,422,442,425,422,431,1176,432,439,404,437,429,428,415,440,418,447,435,1168,433,1176,420,446,410,1189,419,1191,423,1179,427,1188,421,1185,435,8288,435,0,};
    IrSend(pin, datalen, data);
  }
  void SendWindLevel(void){ // 風量
    //SendDataAndParity(0x02);
    const u16 data[datalen]={3383,1578,428,1181,424,432,428,436,424,431,397,459,411,446,410,441,416,454,411,445,411,446,422,435,410,446,421,1185,413,444,434,420,412,453,422,441,418,439,405,452,416,435,422,440,417,440,406,451,428,437,395,462,397,460,428,428,417,1191,396,459,421,432,420,1188,397,466,426,1181,428,1186,409,1201,439,416,397,1211,420,1194,432,423,408,1209,428,426,416,1194,416,438,416,434,431,433,425,431,425,431,418,447,396,1211,421,435,407,1200,420,1191,419,1190,420,1193,417,1186,435,1176,425,8298,433,0,};
    IrSend(pin, datalen, data);
  }
  void SendTimer(void){ // タイマー
    //SendDataAndParity(0x07);
    const u16 data[datalen]={3401,1581,427,1171,443,416,425,448,418,441,417,428,443,430,413,439,424,435,437,429,428,426,421,430,438,427,424,1187,419,431,421,437,430,440,427,433,423,426,430,428,430,434,425,425,432,430,428,424,433,433,419,439,431,431,414,436,432,1177,432,431,425,419,436,1181,416,442,426,1182,427,1183,430,1181,435,426,417,1186,424,1198,426,427,429,1183,435,1176,436,1183,439,1166,448,423,421,419,449,418,439,410,422,447,433,420,424,440,418,432,437,1170,449,1160,438,1174,450,1164,434,1176,434,8283,423,0,};
    IrSend(pin, datalen, data);
  }
  void SendTurbo(void){ // 一発ターボ
    //SendDataAndParity(0x0a);
    const u16 data[datalen]={3342,1611,420,1193,409,460,384,467,399,452,416,439,405,466,369,481,376,495,371,485,371,479,379,487,370,478,384,1223,399,466,409,452,401,459,407,455,402,451,395,460,408,464,389,462,401,468,383,461,403,469,384,474,395,464,382,474,388,1211,411,452,400,456,389,1216,394,480,382,1217,386,1225,395,1216,388,471,395,1214,384,1223,391,476,385,1221,391,463,390,1226,397,454,400,1200,398,465,391,466,388,464,394,470,395,1212,399,466,388,1211,410,448,406,1201,399,1214,379,1225,386,1226,404,8321,419,0,};
    IrSend(pin, datalen, data);
  }
};

// Example.
// void setup(void){
//   CHitachi_EP_ZN30S Hitachi_EP_ZN30S;
//   Hitachi_EP_ZN30S.Init(IrDAPin);
//   Hitachi_EP_ZN30S.SendPowerToggle();
// }

